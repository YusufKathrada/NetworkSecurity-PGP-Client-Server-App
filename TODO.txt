Image sending:
    - allow user to enter name of file
        - sender should send filename, reciever saves with that filename, unless name already found in directory, then prompted to enter a new name
    - Allow for caption senidng
    - sign hash -> message digest implement hashing
    - session key generate session key
    - bundle all and encrypt with session

Image saving:
    - Check if that filename has been used already, if so ask if user wants to overwrite
    - Allow for caption saving: In what format
    - Delete once image has been received
    
Header Structure:

# RECEIVE 
RECEIVE_REQUEST = """RECEIVE
SENDER: {sender}
RECIPIENT: {recipient}
TIMESTAMP: {timestamp}

{message}

EOF"""

# SEND
SEND_REQUEST = """SEND
SENDER: {sender}
RECIPIENT: {recipient}
TIMESTAMP: {timestamp}

{message}

EOF"""


send_header(clientsocket, RECEIVE_REQUEST.format(
    sender=sender,
    recipient=recipient,
    timestamp=datetime.datetime.now().isoformat(),
    message=message))

-----------------------------------------------------

Message structure:

message: {
    session_key_component: {
        recipient_email: "",
        session_key: "",
    },
    signature: {
        timestamp: "",
        sender_email: "",
        message_digest: "",
    },
    message: {
        filename: "",
        timestamp: "",
        data: "",
    }
}